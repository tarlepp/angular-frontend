@use '~@angular/material' as mat;
@use 'sass:map';

// Import application palettes with Angular Material theming
@import '~src/styles/theme';

// Plus imports for other common styles that we need
@import '~src/styles/variables';
@import '~src/styles/animations';
@import '~src/styles/base';
@import '~src/styles/layout';
@import '~src/styles/mixins';

// Light theme common variables
$light-color-config: mat.get-color-config($light-theme);
$light-background: mat.get-color-from-palette(map.get($light-color-config, background), 'background');
$light-background-component: mat.get-color-from-palette(map.get($light-color-config, background), 'card');
$light-text-color: mat.get-color-from-palette(map.get($light-color-config, foreground), 'text');
$light-text-color-disabled: mat.get-color-from-palette(map.get($light-color-config, foreground), 'disabled-text');
$light-text-color-hint: mat.get-color-from-palette(map.get($light-color-config, foreground), 'hint-text');
$light-text-color-secondary: mat.get-color-from-palette(map.get($light-color-config, foreground), 'secondary-text');
$light-primary-color: mat.get-color-from-palette(map.get($light-color-config, primary), $light-hue-primary);
$light-primary-color-contrast: mat.get-contrast-color-from-palette($app-palette-primary, $light-hue-primary);
$light-accent-color: mat.get-color-from-palette(map_get($light-color-config, accent), $light-hue-accent);
$light-accent-color-contrast: mat.get-contrast-color-from-palette($app-palette-accent, $light-hue-accent);
$light-warn-color: mat.get-color-from-palette(map_get($light-color-config, warn), $light-hue-warn);
$light-warn-color-contrast: mat.get-contrast-color-from-palette($app-palette-warn, $light-hue-warn);

// Dark theme common variables
$dark-color-config: mat.get-color-config($dark-theme);
$dark-background: mat.get-color-from-palette(map.get($dark-color-config, background), 'background');
$dark-background-component: mat.get-color-from-palette(map.get($dark-color-config, background), 'card');
$dark-text-color: mat.get-color-from-palette(map.get($dark-color-config, foreground), 'text');
$dark-text-color-disabled: mat.get-color-from-palette(map.get($dark-color-config, foreground), 'disabled-text');
$dark-text-color-hint: mat.get-color-from-palette(map.get($dark-color-config, foreground), 'hint-text');
$dark-text-color-secondary: mat.get-color-from-palette(map.get($dark-color-config, foreground), 'secondary-text');
$dark-primary-color: mat.get-color-from-palette(map.get($dark-color-config, primary), $dark-hue-primary);
$dark-primary-color-contrast: mat.get-contrast-color-from-palette($app-palette-primary, $dark-hue-primary);
$dark-accent-color: mat.get-color-from-palette(map.get($dark-color-config, accent), $dark-hue-accent);
$dark-accent-color-contrast: mat.get-contrast-color-from-palette($app-palette-accent, $dark-hue-accent);
$dark-warn-color: mat.get-color-from-palette(map.get($dark-color-config, warn), $dark-hue-warn);
$dark-warn-color-contrast: mat.get-contrast-color-from-palette($app-palette-warn, $dark-hue-warn);

// Include the light theme styles (color and default density)
.light-theme {
  @include mat.all-component-themes($light-theme);

  /**
   * You can use these `--theme-*` in component specified SCSS files just by
   * using following syntax;
   *
   *  .some-css-class {
   *    color: var(--theme-text-color);
   *  }
   */
  /* stylelint-disable */
  --theme-background: #{$light-background};
  --theme-background-component: #{$light-background-component};
  --theme-text-color: #{$light-text-color};
  --theme-text-color-disabled: #{$light-text-color-disabled};
  --theme-text-color-hint: #{$light-text-color-hint};
  --theme-text-color-secondary: #{$light-text-color-secondary};
  --theme-primary-color: #{$light-primary-color};
  --theme-primary-color-contrast: #{$light-primary-color-contrast};
  --theme-accent-color: #{$light-accent-color};
  --theme-accent-color-contrast: #{$light-accent-color-contrast};
  --theme-warn-color: #{$light-warn-color};
  --theme-warn-color-contrast: #{$light-warn-color-contrast};
  /* stylelint-enable */

  color: $light-text-color;
}

// Include the dark theme styles (color and default density)
.dark-theme {
  @include mat.all-component-themes($dark-theme);

  /**
  * You can use these `--theme-*` in component specified SCSS files just by
  * using following syntax;
  *
  *  .some-css-class {
  *    color: var(--theme-text-color);
  *  }
  */
  /* stylelint-disable */
  --theme-background: #{$dark-background};
  --theme-background-component: #{$dark-background-component};
  --theme-text-color: #{$dark-text-color};
  --theme-text-color-disabled: #{$dark-text-color-disabled};
  --theme-text-color-hint: #{$dark-text-color-hint};
  --theme-text-color-secondary: #{$dark-text-color-secondary};
  --theme-primary-color: #{$dark-primary-color};
  --theme-primary-color-contrast: #{$dark-primary-color-contrast};
  --theme-accent-color: #{$dark-accent-color};
  --theme-accent-color-contrast: #{$dark-accent-color-contrast};
  --theme-warn-color: #{$dark-warn-color};
  --theme-warn-color-contrast: #{$dark-warn-color-contrast};
  /* stylelint-enable */

  color: $dark-text-color;
}
